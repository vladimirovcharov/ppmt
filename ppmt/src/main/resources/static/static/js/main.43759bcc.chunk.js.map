{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","registerServiceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","this","_x","apply","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","identifier","name","description","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","startDate","endDate","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","value","preventDefault","newProject","classnames","is-invalid","placeholder","start_date","end_date","initialState","projectTasks","projectTask","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlogId","projectTaskId","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","projectId","_ref5","_callee5","_context5","_x5","Backlog","tasks","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","projectIdentifier","newTask","addProjectTask","UpdateProjectTask","createdAt","_this$props$match$par","getProjectTask","_nextProps$projectTas","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","Layout_Header","exact","path","Switch","SecureRoute","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.43759bcc.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = (id, history) => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.identifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.name}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.identifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.identifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(this, project.identifier)}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProject }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: \"\",\n      identifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      name: this.state.name,\n      identifier: this.state.identifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.name\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"name\"\n                      value={this.state.name}\n                      onChange={this.onChange}\n                    />\n                    {errors.name && (\n                      <div className=\"invalid-feedback\">{errors.name}</div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.identifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"identifier\"\n                      value={this.state.identifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.identifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.identifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.identifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  projectTasks: [],\n  projectTask: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        projectTasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        projectTask: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        projectTasks: state.projectTasks.filter(\n          projectTask => projectTask.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {}\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      name: \"\",\n      identifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      name,\n      identifier,\n      description,\n      startDate,\n      endDate\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      name,\n      identifier,\n      description,\n      startDate,\n      endDate\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      name: this.state.name,\n      identifier: this.state.identifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.name\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"name\"\n                    value={this.state.name}\n                    onChange={this.onChange}\n                  />\n                  {errors.name && (\n                    <div className=\"invalid-feedback\">{errors.name}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.identifier\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"identifier\"\n                    value={this.state.identifier}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.startDate\n                    })}\n                    name=\"startDate\"\n                    value={this.state.startDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.endDate\n                    })}\n                    name=\"endDate\"\n                    value={this.state.endDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlogId, projectTaskId) {\n    this.props.deleteProjectTask(backlogId, projectTaskId);\n  }\n\n  render() {\n    const { projectTask } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (projectTask.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n    if (projectTask.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n    if (projectTask.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {projectTask.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{projectTask.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {projectTask.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${projectTask.projectId}/${\n              projectTask.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              projectTask.projectId,\n              projectTask.projectSequence\n            )}\n          >\n            Delete\n          </button>{\" \"}\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\nexport const addProjectTask = (\n  backlogId,\n  projectTask,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlogId}`, projectTask);\n    history.push(`/projectBoard/${backlogId}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlogId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlogId}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlogId,\n  projectTaskId,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlogId}/${projectTaskId}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlogId,\n  projectTaskId,\n  projectTask,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(\n      `/api/backlog/${backlogId}/${projectTaskId}`,\n      projectTask\n    );\n    history.push(`/projectBoard/${backlogId}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (\n  backlogId,\n  projectTaskId\n) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${projectTaskId}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlogId}/${projectTaskId}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: projectTaskId\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { projectTasks } = this.props;\n    const tasks = projectTasks.map(projectTask => (\n      <ProjectTask key={projectTask.id} projectTask={projectTask} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.projectTask.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n      if (tasks[i].props.projectTask.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n      if (tasks[i].props.projectTask.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { projectTasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, projectTasks) => {\n      if (projectTasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectId) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectId}\n            </div>\n          );\n        }\n      } else {\n        return <Backlog projectTasks={projectTasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, projectTasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.name && (\n                    <div className=\"invalid-feedback\">{errors.name}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.acceptanceCriteria\n                    })}\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                  {errors.name && (\n                    <div className=\"invalid-feedback\">\n                      {errors.acceptanceCriteria}\n                    </div>\n                  )}\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectId: \"\",\n      createdAt: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlogId, projectTaskId } = this.props.match.params;\n    this.props.getProjectTask(backlogId, projectTaskId, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectId,\n      createdAt\n    } = nextProps.projectTask;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectId,\n      createdAt\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectId: this.state.projectId,\n      createdAt: this.state.createdAt\n    };\n\n    this.props.updateProjectTask(\n      this.state.projectId,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectId}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectId} | Project Task ID:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  projectTask: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  projectTask: state.backlog.projectTask,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //public routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              //private routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}